{"version":3,"sources":["components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectsDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedOutLinks","react_default","a","createElement","className","react_router_dom","to","connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","onClick","profile","initials","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","react","layout_Navbar","exact","path","component","ProjectsDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d580b964.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className='right'>\n      <li>\n        <Link to='/signup'>Sign up</Link>\n      </li>\n      <li>\n        <NavLink to='/signin'>Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  // Won't use `this.props` to `signOut` because `signOut` is a function.\n\n  return (\n    <div>\n      <ul className='right'>\n        <li>\n          <NavLink to='/create'>New Project</NavLink>\n        </li>\n        <li>\n          {/* Won't use `Navbar` due to not go to anywhere */}\n          <a onClick={props.signOut}>Log Out</a>\n        </li>\n        <li>\n          <NavLink to='/' className='btn btn-floating pink lighten-1'>\n            {props.profile.initials}\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\n// props of above return\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","// `thunk` gives to return with (dispatch)\nexport const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    // Make new UID\n    // resp, resp.user: info made by `createUserWithEmailAndPassword()` in firebase\n    // .collection(\"users\"): Firestore will create new collection if `(\"user\")` hasn't exist yet\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return (\n          firestore\n            .collection(\"users\")\n            // .add(): Won't use because we use `uid`\n            .doc(resp.user.uid)\n            .set({\n              firstName: newUser.firstName,\n              lastName: newUser.lastName,\n              initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        );\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className='nav-wrapper grey darken-3'>\n      <div className='container'>\n        <Link to='/' className='brand-logo'>\n          DashAwesome\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    // set `useFirestoreForProfile` in index.js\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className='section'>\n      <div className='card z-depth-0'>\n        <div className='card-content'>\n          <span className='card-title'>Notifications</span>\n          <ul className='notifications'>\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className='pink-text'>{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className='grey-text note-data'>\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className='card z-depth-0 project-summary'>\n      <div className='card-content grey-text-darken-3'>\n        <span className='card-title'>{project.title}</span>\n        <p>\n          Posted by {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className='grey-text'>\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className='project-list section'>\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n\n    if (!auth.uid) return <Redirect to='/signin' />;\n\n    return (\n      <div className='dashboard container'>\n        <div className='row'>\n          <div className='col s12 m6'>\n            <ProjectList projects={projects} />\n          </div>\n          <div className='col s12 m5 offset-m1'>\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    // state => project(rootReducer) => (projectReducer => projects)\n    projects: state.firestore.ordered.projects,\n    notifications: state.firestore.ordered.notifications,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectsDetails = props => {\n  // const id = props.match.params.id;\n  // console.log(props);\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' />;\n\n  if (project) {\n    return (\n      <div className='container section project-details'>\n        <div className='card z-depth-0'>\n          <div className='card-content'>\n            <span className='card-title'>{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className='card-action grey lighten-4 grey-text'>\n            <div>\n              Posted {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className='container center'>\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\n// ownProps: props of component\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectsDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      // e got many of props\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    // to avoid default moving for form. Not going to page being re-flesh\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n\n    // Redirect to top page once login\n    if (auth.uid) return <Redirect to='/' />;\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0'>LOGIN</button>\n            <div className='red-text center'>\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// `authError` will use as props in `const` in above\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      // e got many of props\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    // to avoid default moving for form. Not going to page being re-flesh\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />;\n    return (\n      <div>\n        <div className='container'>\n          <form onSubmit={this.handleSubmit} className='white'>\n            <h5 className='grey-text text-darken-3'>Sign Up</h5>\n            <div className='input-field'>\n              <label htmlFor='email'>Email</label>\n              <input type='email' id='email' onChange={this.handleChange} />\n            </div>\n\n            <div className='input-field'>\n              <label htmlFor='password'>Password</label>\n              <input\n                type='password'\n                id='password'\n                onChange={this.handleChange}\n              />\n            </div>\n\n            <div className='input-field'>\n              <label htmlFor='firstName'>First Name</label>\n              <input type='text' id='firstName' onChange={this.handleChange} />\n            </div>\n            <div className='input-field'>\n              <label htmlFor='lastName'>Last Name</label>\n              <input type='text' id='lastName' onChange={this.handleChange} />\n            </div>\n\n            <div className='input-field'>\n              <button className='btn pink lighten-1 z-depth-0'>SIGN UP</button>\n              <div className='red-text center'>\n                {authError ? <p>{authError}</p> : null}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      // e got many of props\n      [e.target.id]: e.target.value\n    });\n  };\n\n  // preventDefault: to avoid default moving for form. Not going to page being re-flesh\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />;\n\n    return (\n      <div>\n        <div className='container'>\n          <form onSubmit={this.handleSubmit} className='white'>\n            <h5 className='grey-text text-darken-3'>Create new project</h5>\n            <div className='input-field'>\n              <label htmlFor='title'>Title</label>\n              <input type='text' id='title' onChange={this.handleChange} />\n            </div>\n\n            <div className='input-field'>\n              <label htmlFor='content'>Project Content</label>\n              <textarea\n                id='content'\n                className='materialize-textarea'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='input-field'>\n              <button className='btn pink lighten-1 z-depth-0'>Create</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n// createProject(1st): object naming\n// createProject(project): it is action creator. imported function\n// Work with handleSubmit (passing this.state)\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","// thunk way. return with function\n// can omit value of `project` due to same name.\nexport const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to FB DB collection. `then.()` as for promise\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project: project });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n\n// normal way (not using `thunk`)\n// export const createProject = project => {\n//   return {\n//     type: \"ADD_PROJECT \",\n//     project: project\n//   };\n// };\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectsDetails from \"./components/projects/ProjectsDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <BrowserRouter>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectsDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </BrowserRouter>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\n// initState: initial state, it's default value\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"Login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"Signout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" }\n  ]\n};\n\n// initState: initial state, it's default value\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project:\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"create project error:\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDTxHXgdBXjq1RPzpF4jxPy_ZFW0wVX2UE\",\n  authDomain: \"dashawesome-1210.firebaseapp.com\",\n  databaseURL: \"https://dashawesome-1210.firebaseio.com\",\n  projectId: \"dashawesome-1210\",\n  storageBucket: \"\",\n  messagingSenderId: \"59899465481\",\n  appId: \"1:59899465481:web:1d3162d3e8a807d8\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Setting for apply timestamps in firebase\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\n// applyMiddleware: list of middleware\n// compose: connecting firebase and redux\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\n// render everything once loaded firebase authentication\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}